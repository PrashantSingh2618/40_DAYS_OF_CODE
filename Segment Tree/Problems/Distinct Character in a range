
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb(a) push_back(a)
int a[26][1000000]={0},b[26],i,j;
void buildtree(string &s,int v,int tl,int tr)
{
    if(tl==tr)
    {
        a[s[tl]-'a'][v]=1;
    }
    else
    {
        int tm;
        tm=(tl+tr)/2;
        buildtree(s,2*v+1,tl,tm);
        buildtree(s,2*v+2,tm+1,tr);
        int i;
        for(i=0;i<26;i++)
        {
            a[i][v]=a[i][2*v+1]+a[i][2*v+2];
        }
    }
}
void query(int v,int l,int r,int lq,int rq)
{
    if(l>rq||r<lq)
    {
        return;
    }
    else if(l>=lq&&r<=rq)
    {
        for(i=0;i<26;i++)
        {
            if(a[i][v])
            {
                b[i]=1;
            }
        }
    }
    else
    {
        int tm=(l+r)/2;
        query(2*v+1,l,tm,lq,rq);
        query(2*v+2,tm+1,r,lq,rq);
    }
}
void update(int v,string &s,int tl,int tr,int pos, char c)
{
    if(tl==tr)
    {
        a[s[pos]-'a'][v]--;
        a[c-'a'][v]++;
        s[pos]=c;
    }
    else
    {
        int tm;
        tm=(tl+tr)/2;
        if(pos<=tm)
        {
            update(2*v+1,s,tl,tm,pos,c);
            for(i=0;i<26;i++)
        {
            a[i][v]=a[i][2*v+1]+a[i][2*v+2];
        }
        }
        else
        {
            update(2*v+2,s,tm+1,tr,pos,c);
            for(i=0;i<26;i++)
          {
            a[i][v]=a[i][2*v+1]+a[i][2*v+2];
          }
        }
    }
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
    string s;
    cin>>s;
    int l=s.size();
    buildtree(s,0,0,s.size()-1);
    int q;
    cin>>q;
    while(q--)
    {
        int u;
        cin>>u;
        if(u==1)
        {
            int v;
            cin>>v;
            v--;
            char x;
            cin>>x;
            update(0,s,0,s.size()-1,v,x);
        }else
        {
          for(i=0;i<26;i++)
          {
              b[i]=0;
          }
          int l,r;
          cin>>l>>r;
          query(0,0,s.size()-1,l-1,r-1);
          int cn=0;
          for(i=0;i<26;i++)
          {
              if(b[i])
              cn++;
            
          }
          cout<<cn<<endl;
        }
    }
	return 0;
}
